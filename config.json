{
    "type": "Settings",
    "flags": {
        "history": true
    },
    "audio": {
        "input": {
            "encoding": "mulaw",
            "sample_rate": 8000
        },
        "output": {
            "encoding": "mulaw",
            "sample_rate": 8000,
            "container": "none"
        }
    },
    "agent": {
        "language": "en",
        "listen": {
            "provider": {
                "type": "deepgram",
                "model": "nova-3"
            }
        },
        "think": {
            "provider": {
                "type": "open_ai",
                "model": "gpt-4o-mini",
                "temperature": 0.5
            },
            "prompt": "You are a voice agent handling customer queries for Summit Regenerative Orthopedic through a phone call. Have friendly conversation with the customer by helping them understand about their symtomps and treatements. The details of symptoms should be easy to understand for the customer and short recommend treatements that are available in the facility. The available treatments in the facility are PRP (Platelet-Rich Plasma), Lasers, and Non-Operative Orthopedics.If the customer wants to know more about the treatments, offer a short description and inform them that you can email them a free guide with more details. Ask for their email if they agree. For address-related queries, provide the office address: '8753 Yates Drive, Suite 110, Westminster, CO.' After giving the address, inform the customer that they will receive an SMS with the address. The office hours are Monday to Friday, 8am to 5pm and saturdays are based on appointment. You will also assist customers in booking appointments. Ask for the following basic details if the customer hasn't already provided them: 1. Name 2. Age 3. Symptoms (if the customer hasn’t shared them yet). If the customer hasn’t shared their symptoms, ask them about it. When listing options form valid sentences without numbering. Do not use any Markdown formatting. example email address abc.xyz@gmail.com. when asking for user's email address narrate the example email address letter by letter to the users and then ask user to do the same for his email address when user provides the email address again narrate the users email address letter by letter to confirm you got that right.\n\n\n### Functions and Their Descriptions:\n\n-**create_booking**:Use this function when a customer wants to book an appointment for treatment.\n\n-**send_email**:Use this function to mail the free guide to the user.\n\n-**convert_to_iso_format**:Use this function to convert date and time information to iso format. It will return Iso format string.\n\n-**get_busy_times**:Use this function to get the upcoming busy times of the facility. It will return the facility's scheduled appointments and the time intervals when the facility is occupied.\n\n-**get_current_time**:Use this function to know current time.",
            "functions": [
                {
                    "name": "create_booking",
                    "description": "Create a new booking and save it to the system. The booking includes customer details like name, age, symptoms, treatment, and appointment information.",
                    "parameters": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "The full name of the customer booking the appointment."
                            },
                            "age": {
                                "type": "integer",
                                "description": "The age of the customer."
                            },
                            "symptoms": {
                                "type": "string",
                                "description": "The symptoms or medical condition the customer is experiencing (e.g., 'Knee pain')."
                            },
                            "treatment": {
                                "type": "string",
                                "description": "The treatment type being requested. Must be one of 'PRP', 'Lasers', or 'Non-Operative Orthopedics'."
                            },
                            "email": {
                                "type": "string",
                                "description": "The email address of the customer."
                            },
                            "appointment_date": {
                                "type": "string",
                                "description": "The preferred appointment date (in 'YYYY-MM-DD' format)."
                            },
                            "appointment_time": {
                                "type": "string",
                                "description": "The preferred appointment time (in 'HH:MM AM/PM' format)."
                            }
                        },
                        "required": [
                            "name",
                            "age",
                            "symptoms",
                            "treatment",
                            "email",
                            "appointment_date",
                            "appointment_time"
                        ]
                    }
                },
                {
                    "name": "send_email",
                    "description": "Send an email to the provided email address with a predefined message. The function takes the recipient's email as a parameter and sends an email to that address.",
                    "parameters": {
                        "type": "object",
                        "properties": {
                            "email_address": {
                                "type": "string",
                                "description": "The recipient's email address to which the email will be sent."
                            }
                        },
                        "required": [
                            "email_address"
                        ]
                    }
                },
                {
                    "name": "convert_to_iso_format",
                    "description": "Converts a given year, month, day, hour, and minute into an ISO 8601 formatted string in UTC timezone.",
                    "parameters": {
                        "type": "object",
                        "properties": {
                            "year": {
                                "type": "integer",
                                "description": "The year of the datetime to convert."
                            },
                            "month": {
                                "type": "integer",
                                "description": "The month of the datetime to convert (1-12)."
                            },
                            "day": {
                                "type": "integer",
                                "description": "The day of the month of the datetime to convert."
                            },
                            "hour": {
                                "type": "integer",
                                "description": "The hour (24-hour format) of the datetime to convert."
                            },
                            "minute": {
                                "type": "integer",
                                "description": "The minute of the datetime to convert."
                            }
                        },
                        "required": [
                            "year",
                            "month",
                            "day",
                            "hour",
                            "minute"
                        ]
                    }
                },
                {
                    "name": "get_busy_times",
                    "description": "Use this function to get the upcoming busy times of the facility. It will return the facility's scheduled appointments and the time intervals when the facility is occupied.",
                    "parameters": {
                        "type": "object",
                        "properties": {
                            "start_time": {
                                "type": "string",
                                "description": "The start time of the range in ISO 8601 format"
                            },
                            "end_time": {
                                "type": "string",
                                "description": "The end time of the range in ISO 8601 format"
                            }
                        },
                        "required": [
                            "start_time",
                            "end_time"
                        ]
                    }
                },
                {
                    "name": "get_current_time",
                    "description": "Returns the current date and time in ISO 8601 format for the America/Denver timezone.",
                    "parameters": {
                        "type": "object",
                        "properties": {},
                        "required": []
                    }
                }
            ]
        },
        "speak": {
            "provider": {
                "type": "deepgram",
                "model": "aura-2-thalia-en"
            }
        },
        "greeting": "Hello! I'm Joe's Voice Assistant. How can I assist you?"
    }
}